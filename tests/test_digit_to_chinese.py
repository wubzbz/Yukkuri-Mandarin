import pytest

import yukkurimandarin.digit_to_chinese as t


@pytest.mark.parametrize("input, expected", [
    ("", ""),
    ("132465798.0", "一三二四六五七九八点零"),
    ("12 ", "一二"),
    ("0", "零")
])
def test_fractional_read(input, expected):
    assert t.fractional_read(input) == expected


@pytest.mark.parametrize("input, expected", [
    # 十x
    ("10", "十"),
    ("11", "十一"),
    ("100000", "十万"),
    ("150000", "十五万"),
    ("1000000000", "十亿"),
    ("1400000000", "十四亿"),

    # 基础数字
    ("23", "二十三"),
    ("100", "一百"),
    ("101", "一百零一"),
    ("110", "一百一十"),
    ("666", "六百六十六"),
    ("1000", "一千"),
    ("1001", "一千零一"),
    ("1010", "一千零一十"),
    ("1011", "一千零一十一"),
    ("1100", "一千一百"),
    ("1101", "一千一百零一"),
    ("1110", "一千一百一十"),
    ("7891", "七千八百九十一"),

    # 分节
    ("10000", "一万"),
    ("100000000", "一亿"),
    ("1000000000000", "一万亿"),
    
    # 各级末尾有零
    ("1200", "一千二百"),
    ("50000000", "五千万"),
    ("70800000000", "七百零八亿"),
    ("3004000", "三百万四千"),
    ("10001000", "一千万一千"),
    ("100010001000", "一千亿一千万一千"),

    #级内有零
    ("10001", "一万零一"),
    ("60070000", "六千零七万"),
    ("809010020304", "八千零九十亿一千零二万零三百零四"),

    # 级间零（跨级衔接处）
    ("60000700", "六千万零七百"),
    ("900000500", "九亿零五百"),
    ("900005000", "九亿五千"),
    
    # 零的组合
    ("100000001", "一亿零一"),
    ("80900060000", "八百零九亿零六万"),
    
    # 大数
    ("2718281828459", "二万七千一百八十二亿八千一百八十二万八千四百五十九"),
])
def test_integral_read(input, expected):
    assert t.integral_read(input) == expected


@pytest.mark.parametrize("input, expected", [
    ("", ""),
    ("123.306%", "百分之一百二十三点三零六"),
    ("2025 ", "二零二五"),
    ("010", "零一零"),
    ("0", "零"),
    ("31415926535898", "三一四一五九二六五三五八九八")
])
def test_digit_to_chinese(input, expected):
    assert t.digit_to_chinese(input) == expected